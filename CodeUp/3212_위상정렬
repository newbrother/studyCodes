#include <iostream>
#include <algorithm>
#include <functional>
#include <cstring>
#include <queue>
#include <vector>
using namespace std;

//노드의 간선정보
vector<int> arr[201];
//진입차수
int inD[201];
//노드수, 간선수
int v, n;
//위성정렬 결과저장 배열
int result[201];
//이문제에서는 우선순위가 같을때 낮은 숫자를 먼저처리한다
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    cin >> v >> n;
    for (int i = 1; i <= n; i++) {
        int node, line;
        cin >> node >> line;
        arr[node].push_back(line);
        inD[line]++;
    }

    priority_queue< int, vector<int>, greater<int> > q;
    for (int i = 1; i <= v; i++) {
        if (inD[i] == 0) {
            q.push(i);
        }
    }
    for (int i = 1; i <= v; i++) {
        if (q.empty()) {
            cout << -1;
            return 0;
        }
        int x = q.top();
        q.pop();
        result[i] = x;
        for (int j = 0; j < arr[x].size(); j++) {
            inD[arr[x][j]]--;
            if (inD[arr[x][j]] == 0) {
                q.push(arr[x][j]);
            }
        }
    }
    for (int i = 1; i <= v; i++) {
        cout << result[i] << '\n';
    }
    return 0;
}
