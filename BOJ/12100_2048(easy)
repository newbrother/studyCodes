//역대급 긴코드……….하아…….처음길을 ….. 너무나도 잘못들었어……
//C코드에 브루트포스로 푼사람이 얼마나있을까
//게다가 어딘가에 인덱스 접근 잘못되있는 부분이 틀림없이 있을거에요
//배열크기를 맥시멈 20씩으로 했는데 틀렸다고해서 21로 바꿨더니 되는데 
//지쳐서 더는 코드를 못보겠다.

#include <stdio.h>
#include <string.h>

int input[21][21] = { 0 };
int arr[21][21] = { 0 };
int flag[21][21] = { 0 };

int main() {
    int n;
    int i, j, k;
    int cnt = 0;
    
    scanf("%d", &n);//n:1~20 ->arr:0~19

    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &input[i][j]);
        }
    }
    int max = 0;
    int keyArr[5] = { 0 };
    int a, b, c, d, e,f;
    for (a = 0; a < 4; a++) {
        keyArr[0] = a;
        for (b = 0; b < 4; b++) {
            keyArr[1] = b;
            for (c = 0; c < 4; c++) {
                keyArr[2] = c;
                for (d = 0; d < 4; d++) {
                    keyArr[3] = d;
                    for (e = 0; e < 4; e++) {
                        keyArr[4] = e;
                        
                        for (i = 0; i < n; i++) {
                            for (j = 0; j < n; j++) {
                                arr[i][j] = input[i][j];
                            }
                        }
                        for (f = 0; f < 5; f++) {
                            //////////////////////////////////////////////////
                            
                            memset(flag, 0, sizeof(flag));
                            /*printf("a:%d b:%d c:%d d:%d e:%d\n", a, b, c, d, e);
                            for (i = 0; i < n; i++) {
                                for (j = 0; j < n; j++) {
                                    printf("%d ", arr[i][j]);
                                }
                                printf("\n");
                            }*/
                            //left
                            if (keyArr[f] == 0) {
                                for (k = 0; k < n; k++) {
                                    cnt = 0;
                                    for (j = 0; j < n - 1; j++) {
                                        for (i = 0; i < n; i++) {
                                            if (arr[i][j] != 0 && arr[i][j] == arr[i][j + 1] && (flag[i][j] == 0 && flag[i][j + 1] == 0)) {
                                                arr[i][j] = arr[i][j] << 1;
                                                flag[i][j] = 1;
                                                arr[i][j + 1] = 0;
                                            }
                                            else if (arr[i][j + 1] != 0 && arr[i][j] == 0) {
                                                //교환후, 플래그도 같이 위쪽으로 올라감
                                                arr[i][j] = arr[i][j + 1];
                                                arr[i][j + 1] = 0;
                                                if (flag[i][j + 1] == 1)
                                                    flag[i][j] = 1;
                                                flag[i + 1][j] = 0;
                                            }
                                            else {
                                                cnt++;
                                            }
                                        }
                                    }
                                    if (cnt == (n - 1)*n)
                                        break;
                                }
                            }
                            //right
                            else if (keyArr[f] == 1) {
                                for (k = 0; k < n; k++) {
                                    cnt = 0;
                                    for (j = n - 2; j >= 0; j--) {
                                        for (i = 0; i < n; i++) {
                                            if (arr[i][j + 1] != 0 && arr[i][j] == arr[i][j + 1] && (flag[i][j] == 0 && flag[i][j + 1] == 0)) {
                                                arr[i][j + 1] = arr[i][j + 1] << 1;
                                                flag[i][j + 1] = 1;
                                                arr[i][j] = 0;
                                            }
                                            else if (arr[i][j] != 0 && arr[i][j + 1] == 0) {
                                                arr[i][j + 1] = arr[i][j];
                                                arr[i][j] = 0;
                                                if (flag[i][j] == 1) {
                                                    flag[i][j + 1] = 1;
                                                    flag[i][j] = 0;
                                                }

                                            }
                                            else {
                                                cnt++;
                                            }
                                        }
                                    }
                                    if (cnt == (n - 1)*n)
                                        break;
                                }
                            }
                            //up
                            else if (keyArr[f] == 2) {

                                for (k = 0; k < n; k++) {
                                    cnt = 0;
                                    for (i = 0; i < n - 1; i++) {
                                        for (j = 0; j < n; j++) {
                                            if (arr[i][j] != 0 && arr[i][j] == arr[i + 1][j] && (flag[i][j] == 0 && flag[i + 1][j] == 0)) {
                                                arr[i][j] = arr[i][j] << 1;
                                                flag[i][j] = 1;
                                                arr[i + 1][j] = 0;
                                            }
                                            else if (arr[i + 1][j] != 0 && arr[i][j] == 0) {
                                                //교환후, 플래그도 같이 위쪽으로 올라감
                                                arr[i][j] = arr[i + 1][j];
                                                arr[i + 1][j] = 0;
                                                if (flag[i + 1][j] == 1) {
                                                    flag[i][j] = 1;
                                                    flag[i + 1][j] = 0;
                                                }
                                            }
                                            else {
                                                cnt++;
                                            }
                                        }
                                    }
                                    if (cnt == (n - 1)*n)
                                        break;
                                }
                            }
                            //down
                            else if (keyArr[f] == 3) {
                                for (k = 0; k < n; k++) {
                                    cnt = 0;
                                    for (i = n - 2; i >= 0; i--) {
                                        for (j = 0; j < n; j++) {
                                            if (arr[i + 1][j] != 0 && arr[i][j] == arr[i + 1][j] && (flag[i][j] == 0 && flag[i + 1][j] == 0)) {
                                                arr[i + 1][j] = arr[i + 1][j] << 1;
                                                flag[i + 1][j] = 1;
                                                arr[i][j] = 0;
                                            }
                                            else if (arr[i][j] != 0 && arr[i + 1][j] == 0) {
                                                arr[i + 1][j] = arr[i][j];
                                                arr[i][j] = 0;
                                                if (flag[i][j] == 1) {
                                                    flag[i + 1][j] = 1;
                                                    flag[i][j] = 0;
                                                }
                                            }
                                            else {
                                                cnt++;
                                            }
                                        }
                                    }
                                    if (cnt == (n - 1)*n)
                                        break;
                                }
                            }
                            for (i = 0; i < n; i++) {
                                for (j = 0; j < n; j++) {
                                    if (max < arr[i][j]) {
                                        max = arr[i][j];
                                    }
                                }
                            }
                            //////////////////////////////////////////////

                        }
                    }
                }
            }
        }
    }
    
    printf("%d", max);
    return 0;
}

        

       

        
       



