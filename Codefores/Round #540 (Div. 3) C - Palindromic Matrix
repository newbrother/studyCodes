//http://codeforces.com/contest/1118/problem/C
//콘테스트때는 순열(nextpermitation)을 사용했더니 오답과 시간초과가 났다.
//그래서 출제자의 블로그에 문제설명을 참고해서 풀었다.
//http://codeforces.com/blog/entry/65383

#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;

int arr[1001];
priority_queue<pair<int, int>> q;
int map[20][20];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int n;
    cin >> n;
    for (int i = 0; i < n*n; i++) {
        int tmp;
        cin >> tmp;
        arr[tmp]++;
    }
    for (int i = 1; i <=1000 ; i++) {
        if (arr[i] > 0) {
            q.push({arr[i],i});
        }
    }
    //젤많은것부터 채워넣자
    for (int i = 0; i < n / 2; i++) {
        for (int j = 0; j < n / 2; j++) {
            int size = q.top().first;
            int num = q.top().second;
            q.pop();
            if (size < 4) {
                cout << "NO";
                return 0;
            }
            if (size > 4) {
                size = size - 4;
                q.push({ size,num });
            }
            map[i][j] = num;
            map[i][n-j-1] = num;
            map[n-i-1][j] = num;
            map[n-i-1][n-j-1] = num;
        }
    }
    //홀수면 안에공간 남은걸로 채우자
    //가로세로 중간라인 채운뒤에 나머지로 정중앙 채우면되겠다.
    if (n % 2 != 0) {
        for (int i = 0; i < n / 2; i++) {
            int size = q.top().first;
            int num = q.top().second;
            q.pop();
            if (size < 2) {
                cout << "NO";
                return 0;
            }
            if (size > 2) {
                size = size - 2;
                q.push({ size,num });
            }
            map[i][n/2] = num;
            map[n-i-1][n/2] = num;

            int size2 = q.top().first;
            int num2 = q.top().second;
            q.pop();
            if (size2 < 2) {
                cout << "NO";
                return 0;
            }
            if (size2 > 2) {
                size2 = size2 - 2;
                q.push({ size2,num2 });
            }
            map[n/2][n - i - 1] = num2;
            map[n/2][i] = num2;
        }
        //중앙채우기
        if (q.empty()) {
            cout << "NO";
            return 0;
        }
        int num = q.top().second;
        map[n / 2][n / 2] = num;
    }

    cout << "YES" << '\n';
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << map[i][j] << ' ';
        }
        cout << '\n';
    }
    return 0;
}
