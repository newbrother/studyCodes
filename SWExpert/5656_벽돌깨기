//h랑 w를 순서 바꿔서 입력받는 실수를 했다.
//arr에 값이 이상하게들어가서 한참 헤맸다.

#include <iostream>
#include <algorithm>
#include <functional>
#include <cstring>
#include <queue>
#include <vector>
using namespace std;

int arr[15][12];
int n, h, w;
const int dx[] = { 1,0,-1,0 };
const int dy[] = { 0,-1,0,1 };
queue<pair<pair<int,int>, int> > q;
int ans = -1;

//구슬 떨어뜨리는 함수
void boom(int idx) {
    int i;
    int num = 0;
    for (i = 0; i < h; i++) {
        if (arr[i][idx] > 0) {
            num = arr[i][idx];
            break;
        }
    }
    if (i == h)
        return;

    if (num == 1) {
        arr[i][idx] = 0;
        return;
    }
    else {
        q.push({ { i,idx },num });
        arr[i][idx] = 0;
    }
    while (!q.empty()) {
        int x = q.front().first.first;
        int y = q.front().first.second;
        int dis = q.front().second;
        q.pop();
        //4방향으로 dis-1만큼씩 간다.
        for (int dir = 0; dir < 4; dir++) {
            int nx = x;
            int ny = y;
            for (int d = 0; d < dis - 1; d++) {
                nx += dx[dir];
                ny += dy[dir];
                if (nx < 0 || nx >= h || ny < 0 || ny >= w) {
                    break;
                }
                if (arr[nx][ny] == 1)
                    arr[nx][ny] = 0;
                else if (arr[nx][ny] > 1) {
                    q.push({ { nx,ny },arr[nx][ny] });
                    arr[nx][ny] = 0;
                }
            }
        }
    }
    //빈공간 밑으로 내리기
    for (int y = 0; y < w; y++) {
        int cnt = 0;
        for (int x = h-1; x >= 0; x--) {
            int num = arr[x][y];
            if (num>0) {
                arr[x][y] = 0;
                arr[h - 1 - cnt][y] = num;
                cnt++;
            }
        }
    }

    return;
}

void dfs(int cnt) {
    //종료조건
    if (cnt == n) {
        
        //최소 벽돌수 센다.
        int num = 0;
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (arr[i][j]>0)
                    num++;
            }
        }
        if (ans == -1 || num < ans)
            ans = num;
        return;
    }
    int backup[15][12] = { 0 };
    memcpy(backup, arr, sizeof(arr));
    for (int i = 0; i < w; i++) {
        //i번 라인에 구슬 떨어뜨림.
        //cout << '\n' << "cnt: " << cnt << " i: " << i << '\n';
        boom(i);
        /*
        cout << '\n';
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                cout << arr[i][j] << ' ';
            }
            cout << '\n';
        }
        */
        dfs(cnt + 1);
        memcpy(arr, backup, sizeof(arr));
    }
}

int main()
{
    
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    int T;
    cin >> T;
    for (int tc = 1; tc <= T; tc++) {
        //초기화
        ans = -1;
        memset(arr, 0, sizeof(arr));
        //구슬쏘는횟수(최대4), 세로, 가로
        cin >>n>> w >> h;
        //남은 벽돌의 개수를 구하라

        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                cin >> arr[i][j];
            }
        }
        dfs(0);
        cout <<'#'<<tc<<' '<<ans<<'\n';
    }
    
    return 0;
}
