//dx에서 '위로'가 -1이고 아래쪽이 1인데 헷갈렸다.

#include <iostream>
#include <algorithm>
#include <functional>
#include <cstring>
#include <queue>
#include <vector>
using namespace std;

int arr[50][50];
int chk[50][50];
//아래로, 왼쪽, 위로, 오른쪽
const int dx[7][4] = { {1,0,-1,0}, {1,0,-1,0},{ 0,0,0,0},{0,0,-1,0 },{1,0,0,0},{1,0,0,0},{0,0,-1,0} };
const int dy[7][4] = { {0,-1,0,1},{0,0,0,0},{0,-1,0,1},{0,0,0,1},{0,0,0,1},{0,-1,0,0},{0,-1,0,0} };
const int type[4][7] = { {1,1,0,1,0,0,1},{1,0,1,1,1,0,0},{1,1,0,0,1,1,0},{1,0,1,0,0,1,1} };
//위에서 아래로 가능한 타입
//1,2,4,7
//오른쪽에서 왼쪽 가능한 타입
//1,3,4,5
//아래위치에서 위로가는게 가능한 타입
//1,2,5,6
//왼쪽에서 오른쪽 가능한 타입
//1,3,6,7


typedef struct info {
    int x;
    int y;
    int cnt;
};

int main()
{
    
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    int T;
    cin >> T;
    for (int tc = 1; tc <= T; tc++) {
        memset(arr, 0, sizeof(arr));
        memset(chk, 0, sizeof(chk));
        int n, m, r, c, l;
        cin >> n >> m >> r >> c >> l;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                cin >> arr[i][j];
            }
        }
        info start = { r,c,1 };
        chk[r][c] = 1;
        queue<info> q;
        q.push(start);
        while (!q.empty()) {
            int x = q.front().x;
            int y = q.front().y;
            int cnt = q.front().cnt;
            q.pop();
            if (cnt >= l)
                break;
            int t = arr[x][y]-1;
            for (int dir = 0; dir < 4; dir++) {
                int nx = x + dx[t][dir];
                int ny = y + dy[t][dir];
                if (nx >= 0 && nx < n && ny >= 0 && ny < m && arr[nx][ny]>0 && chk[nx][ny]==0) {
                    if (type[dir][arr[nx][ny]-1] == 1) {
                        chk[nx][ny] = 1;
                        info p = { nx,ny,cnt + 1 };
                        q.push(p);
                    }
                }
            }
        }
        //chk숫자센다
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (chk[i][j]>0)
                    ans++;
            }
        }
        cout <<'#'<<tc<<' '<<ans<<'\n';
    }
    
    return 0;
}
