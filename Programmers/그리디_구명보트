//미리 limit-40보다 큰 친구들은 answer에 더해놓는다.
//아닌 친구들만 배열에 새로 저장.
//최대 초 : 테스트 1 〉	통과 (1.50ms )

#include <string>
#include <algorithm>
#include <vector>

using namespace std;

int w[50001];

int solution(vector<int> people, int limit) {
    int answer = 0;
    int i,j;
    int size = people.size();
    int arrSize = 0;
    for(i=0;i<size;i++){
        if(people[i]>limit-40){
            answer++;
        }else{
            w[arrSize] = people[i];
            arrSize++;
        }
    }
    sort(w,w+arrSize);
    //for(i=0;i<arrSize;i++)
    //    printf("w[%d]=%d ",i,w[i]);
    i=0, j=arrSize-1;
    while(i<=j){
        if(w[j]+w[i]<=limit){
            i++;
        }
        j--;
        answer++;
    }
    //printf("end i=%d j=%d\n",i,j);
    return answer;
}

------------------------
//더간단한 버전 
//테스트 1 〉	통과 (1.78ms, 4.13MB)

#include <string>
#include <algorithm>
#include <vector>

using namespace std;

int solution(vector<int> people, int limit) {
    int answer = 0;
    sort(people.begin(),people.end());
    int i=0, j=people.size()-1;
    while(i<=j){
        if(people[j]+people[i]<=limit){
            i++;
        }
        j--;
        answer++;
    }
    return answer;
}
