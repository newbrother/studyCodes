//처음에 어느시점에 pop을 해야할지 갈피를 못잡았다. 
//무게가 넘칠때는 큐에 0을 푸쉬하는식으로 하는게 키포인트였다.
//계속 반복되다가 current가 0이되면 종료하면된다. (처음엔 i==n일떄 큐에 -1를 넣어서 검출되면 종료하려고 했는데 굳이 그럴필요가없었다)
//드디어 큐를 활용해서 문제를 해결했다!


#include <string>
#include <vector>
#include <queue>
using namespace std;

int solution(int bridge_length, int weight, vector<int> truck_weights) {
    int answer = 0; //time
    queue<int> q;
    //큐 다리길이만큼 0으로 초기화.
    for(int x=0;x<bridge_length;x++){
        q.push(0);
    }
    int n = truck_weights.size();
    int current = 0; //current weight
    int i=0; //truck index
    
    while(1){
        answer++;
        current-=q.front();
        q.pop();
        if(i<n && current+truck_weights[i] <= weight){
            q.push(truck_weights[i]);
            current+=truck_weights[i];
            i++;
        }
        else{
            q.push(0);
        }
        
        if(current<=0)
            break;
    }
    return answer;
}
